импорт асинсио
импорт ос
из датавремя импорт датавремя

из айограмма импорт Бот
из aiogram.enums.parse_mode импорт ParseMode
из apscheduler.schedulers.asyncio импорт AsyncIOScheduler
из дотенв импорт load_dotenv
из генератор_контента импорт сгенерировать_пост

load_dotenv()

API_TOKEN = ос.гетенв("БОТ_ТОКЕН")
CHANNEL_ID = os.гетенв("ИДЕНТИФИКАТОР_КАНАЛА")

бот = Бот(token=API_TOKEN, parse_mode=ParseMode.HTML)
планировщик = AsyncIOScheduler()

# Времена публикации и темы
content_plan = {
    "06:00": "утренняя настройка",
    "12:00": "факт дня",
    "18:00": "микрочеллендж",
    "21:59": "вечерняя рефлексия"
}

асинхронизация деф отправить_пост(тема: стр):
    попробовать:
 пост_текст = сгенерировать_пост(тема)
        ждать бот.отправить_сообщение(chat_id=CHANNEL_ID, текст=post_text)
        печать(ф"[{дата-время.сейчас()}] Отправлено сообщение: {пост_текст[:40]}. ...")
    кроме Исключение как е:
        печать(f"Ошибка отправки сообщения: {e}")

асинхронизация деф планировщик_старт():
    для time_str, тема в план_контента.предметы():
 час, минута = карта(int, time_str.сплит(":"))
 планировщик.добавить_задание(отправить_пост, "хрон", час=час, минута=минута, аргументы=[тема])
 планировщик.начинать()

асинхронизация деф основной():
    ждать планировщик_старт()
    печать(«Бот бежит...»)
    пока Правда:
        ждать асинсио.спать(3600)

если __имя__ == "__главный__":
 асинсио.бегать(основной())
