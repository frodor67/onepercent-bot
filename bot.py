import asyncio
import os
from datetime import datetime

from aiogram import Bot
from aiogram.enums.parse_mode import ParseMode
from apscheduler.schedulers.asyncio import AsyncIOScheduler
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()
API_TOKEN = os.getenv("BOT_TOKEN")
CHANNEL_ID = os.getenv("CHANNEL_ID", "@onepercenistbetter")

if not API_TOKEN:
    raise RuntimeError("BOT_TOKEN is not set in environment")

# –ü—Ä–æ–≤–µ—Ä–∫–∞ multiprocessing ‚Äî –¥–ª—è —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏ –Ω–∞ –ª—ë–≥–∫–∏—Ö —Å–±–æ—Ä–∫–∞—Ö
try:
    import multiprocessing
except ImportError:
    print("‚ö†Ô∏è WARNING: multiprocessing –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω. APScheduler –º–æ–∂–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –Ω–µ –ø–æ–ª–Ω–æ—Å—Ç—å—é.")

# –ë–æ—Ç –∏ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫
bot = Bot(token=API_TOKEN, parse_mode=ParseMode.HTML)
scheduler = AsyncIOScheduler()

# –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –ø—É–±–ª–∏–∫–∞—Ü–∏–π
content_schedule = {
    "06:00": "‚ú® <b>1% –£—Ç—Ä–µ–Ω–Ω—è—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞</b>\n–°–µ–≥–æ–¥–Ω—è –Ω–µ –Ω—É–∂–Ω–æ –±—ã—Ç—å –∏–¥–µ–∞–ª—å–Ω—ã–º. –¢–æ–ª—å–∫–æ –ª—É—á—à–µ, —á–µ–º –≤—á–µ—Ä–∞.",
    "12:00": "üìä <b>–§–∞–∫—Ç –¥–Ω—è</b>\n40% —Ä–µ—à–µ–Ω–∏–π –º—ã —Å–æ–≤–µ—Ä—à–∞–µ–º –ø–æ –ø—Ä–∏–≤—ã—á–∫–µ. –ú–µ–Ω—è—è –æ–¥–Ω—É, —Ç—ã –º–µ–Ω—è–µ—à—å –ø–æ–ª–æ–≤–∏–Ω—É –¥–Ω—è.",
    "18:00": "üéØ <b>–ú–∏–∫—Ä–æ—á–µ–ª–ª–µ–Ω–¥–∂</b>\n10 –º–∏–Ω—É—Ç –∞–±—Å–æ–ª—é—Ç–Ω–æ–≥–æ —Ñ–æ–∫—É—Å–∞.\n–í—ã–∫–ª—é—á–∏ –æ—Ç–≤–ª–µ—á–µ–Ω–∏—è. –ü—Ä–æ—Å—Ç–æ –Ω–∞—á–Ω–∏.",
    "21:59": "üåö <b>–†–µ—Ñ–ª–µ–∫—Å–∏—è</b>\n–ß—Ç–æ —Å–µ–≥–æ–¥–Ω—è –ø–æ–ª—É—á–∏–ª–æ—Å—å? –ß—Ç–æ –º–æ–∂–Ω–æ —É–ª—É—á—à–∏—Ç—å?\n–ó–∞–≤—Ç—Ä–∞ ‚Äî —Å–Ω–æ–≤–∞ –Ω–∞ 1% –≤–ø–µ—Ä—ë–¥."
}

async def send_post(text: str):
    try:
        await bot.send_message(chat_id=CHANNEL_ID, text=text)
        print(f"[{datetime.now().strftime('%Y-%m-%d %H:%M:%S')}] –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: {text[:30]}...")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ: {e}")

async def scheduler_start():
    for time_str, message in content_schedule.items():
        hour, minute = map(int, time_str.split(":"))
        scheduler.add_job(send_post, "cron", hour=hour, minute=minute, args=[message])
    scheduler.start()

async def main():
    await scheduler_start()
    print("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç...")
    try:
        while True:
            await asyncio.sleep(3600)
    except (KeyboardInterrupt, SystemExit):
        print("üõë –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.")

if __name__ == "__main__":
    try:
        asyncio.run(main())
    except ModuleNotFoundError as e:
        if 'ssl' in str(e):
            print("üö® –û—à–∏–±–∫–∞: –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç SSL. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω—É—é —Å–±–æ—Ä–∫—É Python.")
        elif '_multiprocessing' in str(e):
            print("üö® –û—à–∏–±–∫–∞: –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç _multiprocessing. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ python:3.11-slim –∏–ª–∏ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –±–∏–ª–¥.")
        raise
